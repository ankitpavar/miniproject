[{"H:\\cleverX\\miniproject\\client\\src\\components\\Header.js":"1","H:\\cleverX\\miniproject\\client\\src\\pages\\SuccessPage.js":"2","H:\\cleverX\\miniproject\\client\\src\\App.js":"3","H:\\cleverX\\miniproject\\client\\src\\components\\Projects.js":"4","H:\\cleverX\\miniproject\\client\\src\\actions\\projectActions.js":"5","H:\\cleverX\\miniproject\\client\\src\\pages\\ProductPage.js":"6"},{"size":11939,"mtime":1609176214420,"results":"7","hashOfConfig":"8"},{"size":2374,"mtime":1609179575494,"results":"9","hashOfConfig":"8"},{"size":411,"mtime":1609175030405,"results":"10","hashOfConfig":"8"},{"size":2022,"mtime":1609178477245,"results":"11","hashOfConfig":"8"},{"size":1304,"mtime":1609177516331,"results":"12","hashOfConfig":"8"},{"size":274,"mtime":1609153053671,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"1h4cucl",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\cleverX\\miniproject\\client\\src\\components\\Header.js",["28","29","30","31","32","33"],"import React, { useEffect } from 'react';\r\nimport DatePicker from 'react-date-picker';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { useForm } from 'react-hook-form';\r\nimport {useHistory} from 'react-router-dom'\r\nimport SuccessPage from '../pages/SuccessPage';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nimport { createProject } from '../actions/projectActions';\r\n\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 \r\n  const left = 50 \r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n const { register, handleSubmit, formState, errors } = useForm({\r\n   mode: 'onBlur',\r\n });\r\n const history = useHistory()\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const [open1, setOpen1] = React.useState(false);\r\n  const handleOpen1 = () => {\r\n    setOpen1(true);\r\n  };\r\n\r\n  const handleClose1 = () => {\r\n    setOpen1(false);\r\n  };\r\n\r\n  const [tax, setTax] = React.useState('$0.00');\r\n  const [total, setTotal] = React.useState('$0.00');\r\n  const [date, onChange] = React.useState(new Date());\r\n  const [name, setName] = React.useState('');\r\n  const [summary, setSummary] = React.useState('');\r\n  const [cost, setCost] = React.useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  \r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n  const handleClick = () => {\r\n    dispatch(createProject(name,summary,cost,date));\r\n    history.push('/success');\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <header className='text-gray-600 body-font'>\r\n        <div className='container mx-auto flex p-5 flex-col justify-between md:flex-row items-center'>\r\n          <span className='ml-3 text-xl font-extrabold'>CleverX</span>\r\n\r\n          <button\r\n            onClick={handleOpen}\r\n            className='inline-flex items-center bg-gray-100 border-0 py-1 px-3 focus:outline-none hover:bg-gray-200 rounded text-base mt-4 md:mr-8 md:mt-0'>\r\n            Create Project\r\n          </button>\r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby='simple-modal-title'\r\n            aria-describedby='simple-modal-description'>\r\n            <div style={modalStyle} className={classes.paper}>\r\n              <div className='flex flex-row justify-between items-center'>\r\n                <h2 className='text-gray-900 text-lg mb-1 font-bold title-font ml-24'>\r\n                  Create Project\r\n                </h2>\r\n                <button onClick={handleClose}>\r\n                  <box-icon name='x'></box-icon>\r\n                </button>\r\n              </div>\r\n              <p className='leading-relaxed mb-5 text-gray-600'>\r\n                <hr />\r\n              </p>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className='relative mb-4'>\r\n                  <input\r\n                    type='text'\r\n                    placeholder='Title'\r\n                    maxLength={80}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    value={name}\r\n                    name='title'\r\n                    ref={register({\r\n                      required: true,\r\n                      maxLength: 80,\r\n                    })}\r\n                    autoComplete='off'\r\n                    className='w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out'\r\n                  />\r\n                  {errors.title && errors.title.type === 'required' && (\r\n                    <span class='leading-7 text-sm text-red-600'>\r\n                      Title is required.\r\n                    </span>\r\n                  )}\r\n                  {errors.title && errors.title.type === 'maxLength' && (\r\n                    <span class='leading-7 text-sm text-red-600'>\r\n                      Title is too long.\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className='relative mb-4'>\r\n                  <textarea\r\n                    autoComplete='off'\r\n                    onChange={(e) => setSummary(e.target.value)}\r\n                    value={summary}\r\n                    name='description'\r\n                    placeholder='Description'\r\n                    ref={register({\r\n                      required: true,\r\n                      maxLength: 200,\r\n                    })}\r\n                    className='w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 h-32 text-base outline-none text-gray-700 py-1 px-3 resize-none leading-6 transition-colors duration-200 ease-in-out'></textarea>\r\n                  {errors.description &&\r\n                    errors.description.type === 'required' && (\r\n                      <span class='leading-7 text-sm text-red-600'>\r\n                        Description is required.\r\n                      </span>\r\n                    )}\r\n                  {errors.description &&\r\n                    errors.description.type === 'maxLength' && (\r\n                      <span class='leading-7 text-sm text-red-600'>\r\n                        Description is too long.\r\n                      </span>\r\n                    )}\r\n                </div>\r\n                <div className='relative mb-4'>\r\n                  <input\r\n                    disabled\r\n                    type='name'\r\n                    autoComplete='off'\r\n                    placeholder='Upload Attachment'\r\n                    id='name'\r\n                    name='name'\r\n                    className='w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out'\r\n                  />\r\n                </div>\r\n                <div className='relative mb-4'>\r\n                  <DatePicker\r\n                    className='w-full text-gray-400 rounded'\r\n                    onChange={onChange}\r\n                    calendarIcon=''\r\n                    clearIcon=''\r\n                    value={date}\r\n                    placeholder='Select a day'\r\n                    minDate={new Date()}\r\n                  />\r\n                </div>\r\n                <div className='relative mb-4'>\r\n                  <input\r\n                    type='text'\r\n                    autoComplete='off'\r\n                    placeholder='Project Cost'\r\n                    onChange={(e) => setCost(e.target.value)}\r\n                    value={cost}\r\n                    name='cost'\r\n                    ref={register({\r\n                      required: true,\r\n                    })}\r\n                    className='w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out'\r\n                  />\r\n                  {errors.cost && errors.cost.type === 'required' && (\r\n                    <span class='leading-7 text-sm text-red-600'>\r\n                      Cost is required.\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className='relative mb-4 flex flex-row justify-between items-center'>\r\n                  <p className='text-gray-400 font-medium'>\r\n                    CleverX transection fees (20%)\r\n                  </p>\r\n                  <p className='text-gray-400 font-medium'>{tax}</p>\r\n                </div>\r\n                <div className='relative mb-4 flex flex-row justify-between items-center'>\r\n                  <p className='text-gray-400 font-medium'>\r\n                    Total amount in $USD\r\n                  </p>\r\n                  <p className='text-gray-400 font-medium'>{total}</p>\r\n                </div>\r\n                <button\r\n                  type='submit'\r\n                  onClick={handleOpen1}\r\n                  className='text-white bg-indigo-500 border-0 py-2 px-6 focus:outline-none hover:bg-indigo-600 rounded text-lg ml-24'>\r\n                  Create Project\r\n                </button>\r\n                <Modal\r\n                  open={open1}\r\n                  onClose={handleClose1}\r\n                  aria-labelledby='simple-modal-title'\r\n                  aria-describedby='simple-modal-description'>\r\n                  <div style={modalStyle} className={classes.paper}>\r\n                    <div className='flex flex-row justify-between items-center'>\r\n                      <h2 className='text-gray-900 text-lg mb-1 font-bold title-font ml-24'>\r\n                        Choose Card\r\n                      </h2>\r\n                      <button onClick={handleClose}>\r\n                        <box-icon name='x'></box-icon>\r\n                      </button>\r\n                    </div>\r\n                    <p className='leading-relaxed mb-5 text-gray-600'>\r\n                      <hr />\r\n                    </p>\r\n                    <div className='flex flex-col '>\r\n                      <div className='border border-green-400 rounded h-12 w-full bg-white mb-4 flex justify-between items-center'>\r\n                        <div className='flex'>\r\n                          <box-icon\r\n                            name='checkbox-checked'\r\n                            color='#26e051'></box-icon>\r\n                          <box-icon\r\n                            name='visa'\r\n                            type='logo'\r\n                            className='font-medium'\r\n                            color='#2668e0'></box-icon>\r\n                        </div>\r\n                        <span className='mr-4 font-medium'>\r\n                          Visa credit card ending with 7845\r\n                        </span>\r\n                      </div>\r\n                      <div className='border  rounded h-12 w-full bg-white mb-4 flex justify-between items-center'>\r\n                        <div className='ml-4'>\r\n                          <box-icon\r\n                            name='visa'\r\n                            type='logo'\r\n                            className='font-medium'\r\n                            color='#2668e0'></box-icon>\r\n                        </div>\r\n                        <span className='mr-4 font-medium'>\r\n                          Visa credit card ending with 7845\r\n                        </span>\r\n                      </div>\r\n                      <div className='border  rounded h-12 w-full bg-white mb-4 flex  items-center '>\r\n                        <div className='ml-4'>\r\n                          <box-icon name='plus' color='#101318'></box-icon>\r\n                        </div>\r\n                        <span className='ml-8 font-medium'>Add New Card</span>\r\n                      </div>\r\n                      <button\r\n                        type='submit'\r\n                        onClick={handleClick}\r\n                        className='text-white bg-indigo-500 border-0 py-2 px-6 focus:outline-none hover:bg-indigo-600 rounded text-lg'>\r\n                        Pay\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </Modal>\r\n              </form>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","H:\\cleverX\\miniproject\\client\\src\\pages\\SuccessPage.js",["34","35","36"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nimport { projectDetail } from '../actions/projectActions';\r\n\r\nconst SuccessPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const projectDetails = useSelector((state) => state.projectDetails);\r\n  const { loading, error, project } = projectDetails;\r\n\r\n  let now = moment();\r\n  let d1 = now.format();\r\n  let d2 = moment(project.date);\r\n\r\n  let days = d2.diff(d1, 'days');\r\n\r\n  React.useEffect(() => {\r\n    dispatch(projectDetail());\r\n  }, [dispatch]);\r\n  return (\r\n    <section className='text-gray-600 body-font'>\r\n      <div className='container px-5 py-24 mx-auto'>\r\n        <div className='flex flex-col  w-full mb-20'>\r\n          <h1 className='sm:text-4xl text-3xl font-medium title-font text-blue-700'>\r\n            Success 🎉\r\n          </h1>\r\n        </div>\r\n        <div className='flex flex-wrap -m-4'>\r\n          <div className='p-4 md:w-1/2'>\r\n            <div className='h-full w-full border-2 border-gray-200 border-opacity-60 rounded-lg overflow-hidden'>\r\n              <div className='h-24 bg-gray-200 flex justify-between items-center'>\r\n                <div className='p-4 font-bold'>{project.name}</div>\r\n                <div className='p-4 font-bold text-blue-600'>\r\n                  ${project.cost}\r\n                </div>\r\n              </div>\r\n              <div className='p-6'>\r\n                <p className='leading-relaxed mb-3'>{project.summary}</p>\r\n\r\n                <span className='text-gray-400 mr-3 inline-flex items-center lg:ml-auto md:ml-0 ml-auto leading-none text-sm pr-3 py-1 border-r-2 border-gray-200'>\r\n                  <box-icon name='calendar-week' color='#2222ee'></box-icon>\r\n                  Delivery in {days} days{' '}\r\n                </span>\r\n                <span className='text-gray-400 inline-flex items-center leading-none text-sm'>\r\n                  <box-icon name='file-blank' color='#2222ee'></box-icon>{' '}\r\n                  Attachment\r\n                </span>\r\n              </div>\r\n              <button className='w-36 p-2 rounded-md bg-blue-600 text-white m-4 ml-88'>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SuccessPage;\r\n","H:\\cleverX\\miniproject\\client\\src\\App.js",[],"H:\\cleverX\\miniproject\\client\\src\\components\\Projects.js",["37","38"],"H:\\cleverX\\miniproject\\client\\src\\actions\\projectActions.js",[],"H:\\cleverX\\miniproject\\client\\src\\pages\\ProductPage.js",[],{"ruleId":"39","severity":1,"message":"40","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":26},{"ruleId":"39","severity":1,"message":"43","line":7,"column":8,"nodeType":"41","messageId":"42","endLine":7,"endColumn":19},{"ruleId":"39","severity":1,"message":"44","line":8,"column":9,"nodeType":"41","messageId":"42","endLine":8,"endColumn":20},{"ruleId":"39","severity":1,"message":"45","line":35,"column":34,"nodeType":"41","messageId":"42","endLine":35,"endColumn":43},{"ruleId":"39","severity":1,"message":"46","line":58,"column":15,"nodeType":"41","messageId":"42","endLine":58,"endColumn":21},{"ruleId":"39","severity":1,"message":"47","line":59,"column":17,"nodeType":"41","messageId":"42","endLine":59,"endColumn":25},{"ruleId":"39","severity":1,"message":"48","line":3,"column":8,"nodeType":"41","messageId":"42","endLine":3,"endColumn":14},{"ruleId":"39","severity":1,"message":"49","line":12,"column":11,"nodeType":"41","messageId":"42","endLine":12,"endColumn":18},{"ruleId":"39","severity":1,"message":"50","line":12,"column":20,"nodeType":"41","messageId":"42","endLine":12,"endColumn":25},{"ruleId":"39","severity":1,"message":"49","line":10,"column":11,"nodeType":"41","messageId":"42","endLine":10,"endColumn":18},{"ruleId":"39","severity":1,"message":"50","line":10,"column":20,"nodeType":"41","messageId":"42","endLine":10,"endColumn":25},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'SuccessPage' is defined but never used.","'useSelector' is defined but never used.","'formState' is assigned a value but never used.","'setTax' is assigned a value but never used.","'setTotal' is assigned a value but never used.","'Moment' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used."]